---
type ColorsObjectType = {
  [key: string]: string
}
// --background-color
const COLORS: ColorsObjectType = {
  black: '#111',
  red: '#220606',
  blue: '#010114',
  pink: '#150118',
  green: '#011e01',
}
const arrayOfColors = Array.from(Object.entries(COLORS))
---

<section id="home">
  <header class="title-container">
    <h1 class="name-container">Lucas Gazzola</h1>
    <h2 class="job-title-container">Fullstack Developer</h2>
    <div class="color-picker__container">
      {
        arrayOfColors.map(([color, colorCode]) => (
          <button
            title={color.charAt(0).toUpperCase() + color.slice(1)}
            class="color-picker"
            data-color-code={colorCode}
            data-color={color}
          />
        ))
      }
    </div>
  </header>
  <main>
    <button title="Download Curriculum Vitae" class="button-download"
      >Download CV</button
    >
  </main>
</section>

<script>
  const colorHandler = (pickColorElement: HTMLDivElement) => {
    const { color = 'white', colorCode = '#fff' } = pickColorElement.dataset

    pickColorElement.style.backgroundColor = color

    const handleColorClick = () => {
      const root = document.querySelector(':root') as HTMLHtmlElement
      root?.style?.setProperty('--background-color', colorCode)
    }

    pickColorElement.addEventListener('click', handleColorClick)
  }

  const colorsDivList = Array.from(
    document.getElementsByClassName('color-picker')
  ) as Array<HTMLDivElement>

  colorsDivList.forEach(colorHandler)
</script>

<style>
  .color-picker__container {
    display: flex;
    height: 40px;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  .color-picker {
    outline: none;
    border: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.1s ease-in;
  }
  .color-picker:active {
    transform: translateY(1px) scale(0.9);
    box-shadow: 1px 1px 4px #5558 inset;
  }
  @media (hover: hover) {
    .color-picker:hover {
      width: 25px;
      height: 25px;
    }
  }
  #home {
    gap: 38px;
  }
  .button-download {
    width: 140px;
    height: 40px;
    font-size: 18px;
    font-weight: 800;
    outline: none;
    border: none;
    background-color: #075f45;
    color: #fff;
    border-radius: 6px;
    cursor: pointer;
  }
  @media (hover: hover) {
    .button-download:hover {
      background-color: #0bc28bb0;
    }
  }
  .button-download:active {
    background-color: #0bc28b3f;
    transform: scale(0.99);
  }

  section {
    width: 100%;
    align-items: center;
    justify-content: center;
    /* margin-top: 100px; */
    /* 100 viewport heigth minus header's height(100px)  */
    height: 100vh;
    /* height: 100vh; */
  }
  main {
    display: flex;
    justify-content: center;
  }
  .title-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    width: 100%;
  }
  h1,
  h2 {
    text-align: center;
  }
  .name-container {
    font-size: var(--h1-size);
    color: var(--primary-color);
  }
  .job-title-container {
    font-size: var(--h3-size);
    color: var(--secondary-color);
  }
</style>
