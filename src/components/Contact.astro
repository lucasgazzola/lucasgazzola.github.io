---
import FormGroup from './FormGroup.astro'
import SocialNetwork from './SocialNetwork.astro'
const socialNetworks = [
  {
    network: 'GitHub',
    info: 'github.com/lucasgazzola',
    href: 'https://github.com/lucasgazzola',
  },
  {
    network: 'LinkedIn',
    info: 'linkedin.com/in/lucasgazzola',
    href: 'https://www.linkedin.com/in/lucasgazzola/',
  },
  {
    network: 'Email',
    info: 'lucasgazzola@outlook.com',
    href: 'mailto:lucasgazzola1@outlook.com',
  },
  {
    network: 'WhatsApp',
    info: '+54 364 744-6259',
    href: 'https://wa.me/543647446259',
  },
]
---

<section class="contact-section" id="contact">
  <header class="contact-header"><h3 class="section-title">Contact</h3></header>
  <main class="contact-main">
    <div class="main-content scroll-reveal opacity-reveal">
      <form id="contact-form" class="contact-form">
        <!-- <FormGroup>
          <label for="name">Name</label>
          <input
            value=""
            autocomplete="off"
            placeholder="Enter your name..."
            type="text"
            name="name"
            id="name"
          />
        </FormGroup> -->
        <FormGroup>
          <label for="subject">Subject</label>
          <input
            value=""
            autocomplete="off"
            placeholder="Enter the subject..."
            type="text"
            name="subject"
            id="subject"
          />
        </FormGroup>
        <FormGroup>
          <label for="message">Message</label>
          <textarea
            cols="5"
            autocomplete="off"
            placeholder="Enter your message..."
            name="message"
            id="message"></textarea>
        </FormGroup>
        <FormGroup>
          <button id="button-submit" title="Send email" type="submit">
            Send</button
          >
        </FormGroup>
      </form>
      <div class="contact-data">
        <h4 class="contact-data-title">My networks</h4>
        <ul class="social-networks-list">
          {
            socialNetworks.map(({ network, info, href }) => (
              <SocialNetwork href={href} info={info} network={network} />
            ))
          }
        </ul>
      </div>
    </div>
  </main>
</section>

<style>
  .opacity-reveal {
    opacity: 0;
  }
  .active {
    opacity: 1;
    transition: opacity 0.2s ease-in;
  }
  label {
    color: #eee;
    font-size: 18px;
  }
  input {
    height: auto;
  }
  input,
  textarea {
    width: 100%;
    background-color: #ccc;
    font-family: sans-serif;
    padding: 8px 8px;
    border: none;
    outline: none;
    border-radius: 2px;
    transition: background-color 0.2s;
    caret-color: #075f45;
  }

  textarea {
    min-height: 100px;
    resize: vertical;
  }
  input:focus,
  textarea:focus {
    background-color: #fff;
  }

  .contact-main {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .contact-form {
    max-width: 300px;
    min-width: 270px;
    display: flex;
    flex-direction: column;
    gap: 24px;
  }
  .main-content {
    position: relative;
    padding: 40px 20px;
    height: max-content;
    display: inline-flex;
    gap: 3rem;
    /* border: 1px solid #487ce488; */
    border-radius: 4px;
    align-items: center;
    justify-content: center;
    background-color: #0c1b33;
    /* opacity: 0; */
    width: 80ch;
    max-width: 80ch;
    z-index: 500;
  }
  .contact-data {
    min-width: 270px;
    display: flex;
    flex-direction: column;
    align-self: flex-start;
    text-align: center;
    gap: 2rem;
  }
  .contact-data-title {
    /* text-align: center; */
    /* align-self: flex-start;
    justify-self: flex-start; */
  }
  .social-networks-list {
    display: flex;
    height: 100%;
    flex-direction: column;
    gap: 1rem;
    justify-content: center;
    /* align-items: stretch; */
  }
  #button-submit {
    justify-self: center;
    width: 100%;
    height: 30px;
    font-size: 18px;
    font-weight: 800;
    outline: none;
    border: none;
    background-color: var(--footer-background-color);
    /* opacity: 75%; */
    color: #fff;
    border-radius: 6px;
    cursor: pointer;
  }
  @media (hover: hover) {
    #button-submit:hover {
      background-color: var(--button-hover-color);
    }
  }
  #button-submit:active {
    background-color: var(--button-active-color);
    transform: scale(0.99);
  }
  @media (max-width: 682px) {
    .main-content {
      flex-direction: column;
      gap: 2rem;
    }
    .contact-data {
      width: 100%;
      align-items: center;
      justify-content: center;
    }
  }
  @media (max-width: 400px) {
    .main-content {
      width: 100%;
      border: none;
      border-radius: 0;
      padding: 25px 5px;
    }
  }
</style>

<script>
  const submitButton = document.getElementById('button-submit')
  const handleSubmitForm = (event: Event) => {
    event.preventDefault()

    // const nameInput = document.getElementById('name') as HTMLInputElement
    const subjectInput = document.getElementById('subject') as HTMLInputElement
    const messageTextarea = document.getElementById(
      'message'
    ) as HTMLTextAreaElement

    const { value: subject } = subjectInput
    // const { value: name } = nameInput
    const { value: message } = messageTextarea

    // TODO: Handle empty field
    if (subject === '' || message === '') return

    window.open(
      `mailto:lucasgazzola1@outlook.com?subject=${subject}&body=${message}`
    )
    // Clean the inputs
    // nameInput.value = ''
    subjectInput.value = ''
    messageTextarea.value = ''
  }
  submitButton?.addEventListener('click', handleSubmitForm)
</script>
